{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RUKMINI\\\\Desktop\\\\JAVA FULL STACK\\\\expense\\\\frontend\\\\expense\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'http://localhost:5000/api/v1';\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [setError] = useState(null);\n\n  // Calculate incomes\n  const addIncome = async income => {\n    try {\n      const response = await axios.post(`${BASE_URL}add-income`, income);\n      // Assuming you want to update the incomes list after adding a new income\n      await getIncomes(); // Ensure to await the response from getIncomes\n    } catch (err) {\n      var _err$response, _err$response$data;\n      // Handle error if there's an issue with the add-income request\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'An error occurred while adding income');\n    }\n  };\n  const getIncomes = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-incomes`);\n      setIncomes(response.data); // Assuming setIncomes is a state setter function\n      console.log(response.data);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      // Handle error if there's an issue with fetching the incomes\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'An error occurred while fetching incomes');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(GlobalProvider, \"W6uVw/he5Veom/JVFJpTR7E0nh0=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","axios","jsxDEV","_jsxDEV","BASE_URL","GlobalContext","createContext","GlobalProvider","children","_s","incomes","setIncomes","expenses","setExpenses","setError","addIncome","income","response","post","getIncomes","err","_err$response","_err$response$data","data","message","get","console","log","_err$response2","_err$response2$data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["C:/Users/RUKMINI/Desktop/JAVA FULL STACK/expense/frontend/expense/src/context/globalContext.js"],"sourcesContent":["import React, { useContext, useState } from \"react\"\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\nconst BASE_URL = 'http://localhost:5000/api/v1';\r\n\r\n\r\n\r\nconst GlobalContext = React.createContext()\r\n\r\nexport const GlobalProvider = ({children}) =>{\r\n\r\n\r\n    const [incomes, setIncomes] = useState([])\r\n     const [expenses, setExpenses] = useState([])\r\n    const [setError] = useState(null)\r\n\r\n\r\n\r\n    // Calculate incomes\r\nconst addIncome = async (income) => {\r\n    try {\r\n        const response = await axios.post(`${BASE_URL}add-income`, income);\r\n        // Assuming you want to update the incomes list after adding a new income\r\n        await getIncomes(); // Ensure to await the response from getIncomes\r\n    } catch (err) {\r\n        // Handle error if there's an issue with the add-income request\r\n        setError(err.response?.data?.message || 'An error occurred while adding income');\r\n    }\r\n};\r\n\r\nconst getIncomes = async () => {\r\n    try {\r\n        const response = await axios.get(`${BASE_URL}get-incomes`);\r\n        setIncomes(response.data); // Assuming setIncomes is a state setter function\r\n        console.log(response.data);\r\n    } catch (err) {\r\n        // Handle error if there's an issue with fetching the incomes\r\n        setError(err.response?.data?.message || 'An error occurred while fetching incomes');\r\n    }\r\n};\r\n\r\n\r\n\r\n    return(\r\n        <GlobalContext.Provider value={{addIncome}}>\r\n            {children}\r\n        </GlobalContext.Provider>    \r\n    )\r\n}\r\n\r\n\r\nexport const useGlobalContext = () =>{\r\n    return useContext(GlobalContext)\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK1B,MAAMC,QAAQ,GAAG,8BAA8B;AAI/C,MAAMC,aAAa,gBAAGP,KAAK,CAACQ,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMC,cAAc,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAI;EAAAC,EAAA;EAGzC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACc,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;;EAIjC;EACJ,MAAMe,SAAS,GAAG,MAAOC,MAAM,IAAK;IAChC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,GAAGd,QAAQ,YAAY,EAAEY,MAAM,CAAC;MAClE;MACA,MAAMG,UAAU,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACV;MACAR,QAAQ,CAAC,EAAAO,aAAA,GAAAD,GAAG,CAACH,QAAQ,cAAAI,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcE,IAAI,cAAAD,kBAAA,uBAAlBA,kBAAA,CAAoBE,OAAO,KAAI,uCAAuC,CAAC;IACpF;EACJ,CAAC;EAED,MAAML,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMF,QAAQ,GAAG,MAAMhB,KAAK,CAACwB,GAAG,CAAC,GAAGrB,QAAQ,aAAa,CAAC;MAC1DO,UAAU,CAACM,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAC;MAC3BG,OAAO,CAACC,GAAG,CAACV,QAAQ,CAACM,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOH,GAAG,EAAE;MAAA,IAAAQ,cAAA,EAAAC,mBAAA;MACV;MACAf,QAAQ,CAAC,EAAAc,cAAA,GAAAR,GAAG,CAACH,QAAQ,cAAAW,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcL,IAAI,cAAAM,mBAAA,uBAAlBA,mBAAA,CAAoBL,OAAO,KAAI,0CAA0C,CAAC;IACvF;EACJ,CAAC;EAIG,oBACIrB,OAAA,CAACE,aAAa,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAChB;IAAS,CAAE;IAAAP,QAAA,EACtCA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEjC,CAAC;AAAA1B,EAAA,CAvCYF,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AA0C3B,OAAO,MAAM8B,gBAAgB,GAAGA,CAAA,KAAK;EAAAC,GAAA;EACjC,OAAOvC,UAAU,CAACM,aAAa,CAAC;AACpC,CAAC;AAAAiC,GAAA,CAFYD,gBAAgB;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}