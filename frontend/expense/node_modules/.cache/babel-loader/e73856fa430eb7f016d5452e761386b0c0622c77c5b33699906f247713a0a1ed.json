{"ast":null,"code":"// import React, { useEffect, useCallback } from 'react';\n// import styled from 'styled-components';\n// import { useGlobalContext } from '../../context/globalContext';\n// import { InnerLayout } from '../../styles/Layout';\n// import Form from '../Form/Form';\n// import IncomeItem from '../IncomeItem/IncomeItem';\n\n// function Income() {\n//     const { addIncome, incomes, getIncomes, deleteIncome, totalIncome } = useGlobalContext();\n\n//     // Memoize the getIncomes function using useCallback\n//     const fetchIncomes = useCallback(() => {\n//         getIncomes();\n//     }, [getIncomes]);\n\n//     useEffect(() => {\n//         fetchIncomes(); // Call the memoized function\n//     }, [fetchIncomes]);\n\n//     return (\n//         <IncomeStyled>\n//             <InnerLayout>\n//                 <h1>Incomes</h1>\n//                 <h2 className=\"total-income\">\n//                     Total Income: <span>${totalIncome()}</span>\n//                 </h2>\n//                 <div className=\"income-content\">\n//                     <div className=\"form-container\">\n//                         <Form />\n//                     </div>\n//                     <div className=\"incomes\">\n//                         {incomes.map((income) => {\n//                             const { _id, title, amount, date, category, description, type } = income;\n//                             return (\n//                                 <IncomeItem\n//                                     key={_id}\n//                                     id={_id}\n//                                     title={title}\n//                                     description={description}\n//                                     amount={amount}\n//                                     date={date}\n//                                     type={type}\n//                                     category={category}\n//                                     indicatorColor=\"var(--color-green)\"\n//                                     deleteItem={deleteIncome}\n//                                 />\n//                             );\n//                         })}\n//                     </div>\n//                 </div>\n//             </InnerLayout>\n//         </IncomeStyled>\n//     );\n// }\n\n// const IncomeStyled = styled.div`\n//  background-color: ${props => props.$bg || 'white'};\n//     display: flex;\n//     overflow: auto;\n//     .total-income {\n//         display: flex;\n//         justify-content: center;\n//         align-items: center;\n//         background: #fcf6f9;\n//         border: 2px solid #ffffff;\n//         box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n//         border-radius: 20px;\n//         padding: 1rem;\n//         margin: 1rem 0;\n//         font-size: 2rem;\n//         gap: 0.5rem;\n//         span {\n//             font-size: 2.5rem;\n//             font-weight: 800;\n//             color: var(--color-green);\n//         }\n//     }\n//     .income-content {\n//         display: flex;\n//         gap: 2rem;\n//         .incomes {\n//             flex: 1;\n//         }\n//     }\n// `;\n\n// export default Income;","map":{"version":3,"names":[],"sources":["C:/Users/RUKMINI/Desktop/JAVA FULL STACK/expense/frontend/expense/src/Components/Income/Income.js"],"sourcesContent":["// import React, { useEffect, useCallback } from 'react';\r\n// import styled from 'styled-components';\r\n// import { useGlobalContext } from '../../context/globalContext';\r\n// import { InnerLayout } from '../../styles/Layout';\r\n// import Form from '../Form/Form';\r\n// import IncomeItem from '../IncomeItem/IncomeItem';\r\n\r\n// function Income() {\r\n//     const { addIncome, incomes, getIncomes, deleteIncome, totalIncome } = useGlobalContext();\r\n\r\n//     // Memoize the getIncomes function using useCallback\r\n//     const fetchIncomes = useCallback(() => {\r\n//         getIncomes();\r\n//     }, [getIncomes]);\r\n\r\n//     useEffect(() => {\r\n//         fetchIncomes(); // Call the memoized function\r\n//     }, [fetchIncomes]);\r\n\r\n//     return (\r\n//         <IncomeStyled>\r\n//             <InnerLayout>\r\n//                 <h1>Incomes</h1>\r\n//                 <h2 className=\"total-income\">\r\n//                     Total Income: <span>${totalIncome()}</span>\r\n//                 </h2>\r\n//                 <div className=\"income-content\">\r\n//                     <div className=\"form-container\">\r\n//                         <Form />\r\n//                     </div>\r\n//                     <div className=\"incomes\">\r\n//                         {incomes.map((income) => {\r\n//                             const { _id, title, amount, date, category, description, type } = income;\r\n//                             return (\r\n//                                 <IncomeItem\r\n//                                     key={_id}\r\n//                                     id={_id}\r\n//                                     title={title}\r\n//                                     description={description}\r\n//                                     amount={amount}\r\n//                                     date={date}\r\n//                                     type={type}\r\n//                                     category={category}\r\n//                                     indicatorColor=\"var(--color-green)\"\r\n//                                     deleteItem={deleteIncome}\r\n//                                 />\r\n//                             );\r\n//                         })}\r\n//                     </div>\r\n//                 </div>\r\n//             </InnerLayout>\r\n//         </IncomeStyled>\r\n//     );\r\n// }\r\n\r\n// const IncomeStyled = styled.div`\r\n//  background-color: ${props => props.$bg || 'white'};\r\n//     display: flex;\r\n//     overflow: auto;\r\n//     .total-income {\r\n//         display: flex;\r\n//         justify-content: center;\r\n//         align-items: center;\r\n//         background: #fcf6f9;\r\n//         border: 2px solid #ffffff;\r\n//         box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n//         border-radius: 20px;\r\n//         padding: 1rem;\r\n//         margin: 1rem 0;\r\n//         font-size: 2rem;\r\n//         gap: 0.5rem;\r\n//         span {\r\n//             font-size: 2.5rem;\r\n//             font-weight: 800;\r\n//             color: var(--color-green);\r\n//         }\r\n//     }\r\n//     .income-content {\r\n//         display: flex;\r\n//         gap: 2rem;\r\n//         .incomes {\r\n//             flex: 1;\r\n//         }\r\n//     }\r\n// `;\r\n\r\n// export default Income;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}